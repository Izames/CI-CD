version: '3.8'

services:
  cert-generator:
    image: ubuntu:latest
    command: 
      - bash
      - -c
      - |
        apt-get update &&
        apt-get install -y openssl &&
        mkdir -p /etc/ssl/certs &&
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
          -keyout /etc/ssl/certs/nginx-selfsigned.key \
          -out /etc/ssl/certs/nginx-selfsigned.crt \
          -subj '/CN=localhost' \
          -addext 'subjectAltName=DNS:localhost' &&
        chmod 644 /etc/ssl/certs/*
    volumes:
      - ./ssl:/etc/ssl/certs
    networks:
      - bridge

  php:
    build: ./
    deploy:
      replicas: 3 
    depends_on:
      - mysql
      - redis
    volumes:
      - ./bitrix:/var/www/html
      - ./ssl:/etc/ssl/certs
      - ./php/conf/php.ini:/usr/local/etc/php/conf.d/custom.ini
    restart: always
    environment: 
      PHP_PM_MAX_CHILDREN: 50
      PHP_PM: dynamic
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      PHP_MEMORY_LIMIT: 512M
      PHP_MAX_EXECUTION_TIME: 120
    networks:
      - bridge

  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - 8082:8082
    networks:
      - bridge

  adminer:
    image: adminer
    restart: always
    depends_on:
      - mysql
    ports:
      - 8080:8080
    networks:
      - bridge

  redis:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    networks:
      - bridge

  nginx:
    image: nginx:1.27.3
    ports:
      - 8085:80
      - 8443:443
    depends_on:
      - php
      - cert-generator
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./bitrix:/var/www/html
      - ./ssl:/etc/ssl/certs
    networks:
      - bridge
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    hostname: prometheus
    command: 
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: always
    environment:
      TZ: "Europe/Moscow"
    networks:
      - bridge
  grafana:
    image: grafana/grafana:latest
    user: root
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning
    hostname: grafana
    restart: always
    environment:
      TZ: "Europe/Moscow"
    networks:
      - bridge
networks:
  bridge:
volumes:
  grafana_data:
  prometheus_data: